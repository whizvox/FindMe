plugins {
  id 'java'
}

group = 'me.whizvox.findme'
version = '0.1.5-dev'

repositories {
  mavenCentral()
  maven {
    name = "spigotmc-repo"
    url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
  }
  maven {
    name = "sonatype"
    url = "https://oss.sonatype.org/content/groups/public/"
  }
}

dependencies {
  compileOnly "org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT"
}

def targetJavaVersion = 17
java {
  def javaVersion = JavaVersion.toVersion(targetJavaVersion)
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
  if (JavaVersion.current() < javaVersion) {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
  }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'

  if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
    options.release.set(targetJavaVersion)
  }
}

processResources {
  def props = [version: version]
  inputs.properties props
  filteringCharset 'UTF-8'
  filesMatching('plugin.yml') {
    expand props
  }
}

// delete the old plugin jar
tasks.register("cleanOldLibs", Delete) {
  delete fileTree("${projectDir}/run/plugins").matching {
    include "${archivesBaseName}-*.jar"
  }
}

// copy the built jar into the /run/plugins directory
tasks.register('copyToRun', Copy) {
  from "${buildDir}/libs/${archivesBaseName}-${version}.jar"
  into "${projectDir}/run/plugins"
}

// be sure to build the jar file and delete the old plugin before copying
copyToRun.dependsOn cleanOldLibs
copyToRun.dependsOn jar
